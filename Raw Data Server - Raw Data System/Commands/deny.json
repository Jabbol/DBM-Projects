{
  "name": "deny",
  "permissions": "NONE",
  "restriction": "1",
  "_id": "OmeKs",
  "actions": [
    {
      "source": "NxLYE",
      "type": "true",
      "name": "Call Command/Event"
    },
    {
      "member": "1",
      "varName": "",
      "info": "1",
      "storage": "1",
      "varName2": "cmd-author-id",
      "name": "Store Member Info"
    },
    {
      "info": "1",
      "find": "Dev Testers",
      "storage": "1",
      "varName": "role",
      "name": "Find Role"
    },
    {
      "member": "1",
      "varName": "",
      "role": "3",
      "varName2": "role",
      "iftrue": "3",
      "iftrueVal": "2",
      "iffalse": "0",
      "iffalseVal": "2",
      "name": "Check If Member has Role"
    },
    {
      "channel": "0",
      "varName": "",
      "message": "You need to be a Raw Data Contributor to be able to do this..",
      "storage": "0",
      "varName2": "",
      "name": "Send Message"
    },
    {
      "name": "End Action Sequence"
    },
    {
      "info": "1",
      "find": "rd-approval",
      "storage": "1",
      "varName": "approval-channel",
      "name": "Find Channel"
    },
    {
      "storage": "0",
      "varName": "",
      "name": "Delete Message"
    },
    {
      "info": "0",
      "infoIndex": "1",
      "storage": "1",
      "varName": "postidtofind",
      "name": "Store Command Params"
    },
    {
      "behavior": "1",
      "interpretation": "0",
      "code": "var param = tempVars(\"postidtofind\");\nvar patt = /[0-9]/g;\nif(param.match(patt)){\nthis.callNextAction(cache)\n} else{\nmsg.channel.send(\":x: Invalid post.\")\n}",
      "storage": "0",
      "varName": "",
      "name": "Run Script"
    },
    {
      "info": "1",
      "infoIndex": "2",
      "storage": "1",
      "varName": "denialreason",
      "name": "Store Command Params"
    },
    {
      "condition": "0",
      "comparison": "2",
      "value": "1",
      "iftrue": "3",
      "iftrueVal": "2",
      "iffalse": "0",
      "iffalseVal": "",
      "name": "Check Parameters"
    },
    {
      "channel": "0",
      "varName": "",
      "message": ":x: Please give a reason for denial.",
      "storage": "0",
      "varName2": "",
      "name": "Send Message"
    },
    {
      "name": "End Action Sequence"
    },
    {
      "channel": "0",
      "varName": "",
      "info": "2",
      "storage": "1",
      "varName2": "curchannel",
      "name": "Store Channel Info"
    },
    {
      "storage": "1",
      "varName": "curchannel",
      "comparison": "1",
      "value": "\"rd-contributor-chat\"",
      "iftrue": "3",
      "iftrueVal": "2",
      "iffalse": "0",
      "iffalseVal": "",
      "name": "Check Variable"
    },
    {
      "channel": "0",
      "varName": "",
      "message": ":thinking: no u. go to a gud channel.",
      "storage": "0",
      "varName2": "",
      "name": "Send Message"
    },
    {
      "name": "End Action Sequence"
    },
    {
      "condition": "0",
      "comparison": "2",
      "value": "1",
      "iftrue": "3",
      "iftrueVal": "2",
      "iffalse": "0",
      "iffalseVal": "3",
      "name": "Check Parameters"
    },
    {
      "channel": "0",
      "varName": "",
      "message": ":thinking: Use the format!\n`!deny [ID] [Reason]`",
      "storage": "0",
      "varName2": "",
      "name": "Send Message"
    },
    {
      "name": "End Action Sequence"
    },
    {
      "storage": "1",
      "stringifyOutput": "0",
      "varName": "results",
      "hostname": "",
      "port": "",
      "username": "",
      "password": "",
      "database": "",
      "query": "SELECT * FROM `raw_data_posts` \n    WHERE `post_id` = ${tempVars(\"postidtofind\")};",
      "path": "",
      "otype": "0",
      "source_conn_storage": "3",
      "source_conn_varName": "rd-database-connection",
      "store_source_conn_storage": "0",
      "store_source_conn_varName": "",
      "debugMode": "0",
      "name": "Run SQL Query"
    },
    {
      "behavior": "0",
      "interpretation": "0",
      "code": "var postid = tempVars(\"results\")[0].post_id;\nvar postauthorid = tempVars(\"results\")[0].post_author_id;\nvar postauthor = tempVars(\"results\")[0].post_author_name;\nvar postauthorimg = tempVars(\"results\")[0].post_author_img;\nvar postbody = tempVars(\"results\")[0].post_body;\nvar postcategory = tempVars(\"results\")[0].post_category;\nvar postactive = tempVars(\"results\")[0].active_post;\nvar postapprovalcount = tempVars(\"results\")[0].approve_count;\nvar postdenialcount = tempVars(\"results\")[0].deny_count;\nvar postdenialreasons = tempVars(\"results\")[0].deny_reasons;\nvar voters = tempVars(\"results\")[0].users_voted;\nvar active = postactive;\nvar msgid = tempVars(\"results\")[0].post_msg_id;\n\nif (postactive == 1) {\n  var status = \"1\";\n  var postdenycount = parseInt(postdenialcount) + 1;\n} else if (postactive == 0) {\n  var status = \"0\";\n} else {\n  var status = \"-1\";\n};\nvar id = postid\nJSON.stringify(id)\nid = parseInt(id)\nif(!id){\n  console.log(\"Does Not Exist.\")\n  id = \"undefined\"\n  this.storeValue(id, 1, \"post-id\", cache)\n};\n\nthis.storeValue(postid, 1, \"postid\", cache);\nthis.storeValue(postauthorid, 1, \"postauthorid\", cache);\nthis.storeValue(postauthor, 1, \"postauthor\", cache);\nthis.storeValue(postauthorimg, 1, \"postauthorimg\", cache);\nthis.storeValue(postbody, 1, \"postbody\", cache);\nthis.storeValue(postcategory, 1, \"postcategory\", cache);\nthis.storeValue(postactive, 1, \"postactive\", cache);\nthis.storeValue(postapprovalcount, 1, \"postapprovalcount\", cache);\nthis.storeValue(postdenycount, 1, \"postdenialcount\", cache);\nthis.storeValue(postdenialreasons, 1, \"postdreasons\", cache);\nthis.storeValue(status, 1, \"status\", cache);\nthis.storeValue(voters, 1, \"usersvoted\", cache);\nthis.storeValue(msgid, 1, \"originalmsgid\", cache);",
      "storage": "0",
      "varName": "",
      "name": "Run Script"
    },
    {
      "storage": "1",
      "varName": "results",
      "comparison": "1",
      "value": "('[]'|undefined|NaN)",
      "iftrue": "3",
      "iftrueVal": "2",
      "iffalse": "0",
      "iffalseVal": "2",
      "name": "Check Variable"
    },
    {
      "storage": "1",
      "varName": "post-id",
      "comparison": "1",
      "value": "\"undefined\"",
      "iftrue": "3",
      "iftrueVal": "1",
      "iffalse": "0",
      "iffalseVal": "3",
      "name": "Check Variable"
    },
    {
      "storage": "1",
      "varName": "postactive",
      "comparison": "1",
      "value": "[]",
      "iftrue": "0",
      "iftrueVal": "3",
      "iffalse": "3",
      "iffalseVal": "2",
      "name": "Check Variable"
    },
    {
      "channel": "0",
      "varName": "",
      "message": ":x: Invalid post.",
      "storage": "0",
      "varName2": "",
      "name": "Send Message"
    },
    {
      "name": "End Action Sequence"
    },
    {
      "storage": "1",
      "varName": "status",
      "comparison": "1",
      "value": "'0'",
      "iftrue": "0",
      "iftrueVal": "3",
      "iffalse": "3",
      "iffalseVal": "2",
      "name": "Check Variable"
    },
    {
      "channel": "0",
      "varName": "",
      "message": ":x: This post is no longer active.",
      "storage": "0",
      "varName2": "",
      "name": "Send Message"
    },
    {
      "name": "End Action Sequence"
    },
    {
      "storage": "1",
      "varName": "usersvoted",
      "comparison": "5",
      "value": "\"${tempVars(\"cmd-author-id\")}\"",
      "iftrue": "0",
      "iftrueVal": "3",
      "iffalse": "3",
      "iffalseVal": "2",
      "name": "Check Variable"
    },
    {
      "channel": "0",
      "varName": "",
      "message": ":x: Sorry about that, you can only vote once.",
      "storage": "0",
      "varName2": "",
      "name": "Send Message"
    },
    {
      "name": "End Action Sequence"
    },
    {
      "behavior": "0",
      "interpretation": "0",
      "code": "var postactive = tempVars(\"status\");\nvar voters = tempVars(\"usersvoted\");\nvar postdenialcount = tempVars(\"postdenialcount\");\nvar postdenialreasons = tempVars(\"postdreasons\").toString();\nvar cmdauth = tempVars(\"cmd-author-id\");\n\nif (!voters) {\n  var usersvoted = cmdauth;\n} else {\n  var usersvoted = voters + \"\\n\"                                                                                                                       + cmdauth;\n};\n\nif (postdenialcount == 5) {\n  var status = \"0\";\n};\n\nthis.storeValue(status, 1, \"postactive\");\nthis.storeValue(postdenialcount, 1, \"postdenialcount\", cache);\nthis.storeValue(postdreasons, 1, \"postdreasons\", cache);\nthis.storeValue(usersvoted, 1, \"usersvoted\", cache);",
      "storage": "0",
      "varName": "",
      "name": "Run Script"
    },
    {
      "storage": "0",
      "stringifyOutput": "0",
      "varName": "",
      "hostname": "",
      "port": "",
      "username": "",
      "password": "",
      "database": "",
      "query": "UPDATE `raw_data_posts` \nSET `active_post` = ${tempVars(\"postactive\")}, `deny_count` = ${tempVars(\"postdenialcount\")}, `users_voted` = '${tempVars(\"usersvoted\")}\\n${tempVars(\"cmd-author-id\")}'\n    WHERE `post_id` = ${tempVars(\"postidtofind\")};",
      "path": "",
      "otype": "0",
      "source_conn_storage": "3",
      "source_conn_varName": "rd-database-connection",
      "store_source_conn_storage": "0",
      "store_source_conn_varName": "results",
      "debugMode": "0",
      "name": "Run SQL Query"
    },
    {
      "channel": "5",
      "varName": "approval-channel",
      "message": "${member} voted to deny **#${tempVars(\"postidtofind\")}** (Total: ${tempVars(\"postdenialcount\")})\nReason: ``${tempVars(\"denialreason\")}``",
      "storage": "0",
      "varName2": "",
      "name": "Send Message"
    },
    {
      "storage": "0",
      "stringifyOutput": "0",
      "varName": "",
      "hostname": "",
      "port": "",
      "username": "",
      "password": "",
      "database": "",
      "query": "UPDATE `raw_data_posts` \nSET  `deny_reasons` = '${tempVars(\"postdreasons\")}\\n <@${tempVars(\"cmd-author-id\")}>: ${tempVars(\"denialreason\")}'\n    WHERE `post_id` = ${tempVars(\"postidtofind\")};",
      "path": "",
      "otype": "0",
      "source_conn_storage": "3",
      "source_conn_varName": "rd-database-connection",
      "store_source_conn_storage": "0",
      "store_source_conn_varName": "results",
      "debugMode": "0",
      "name": "Run SQL Query"
    },
    {
      "storage": "1",
      "varName": "postdenialcount",
      "comparison": "1",
      "value": "5",
      "iftrue": "0",
      "iftrueVal": "",
      "iffalse": "1",
      "iffalseVal": "",
      "name": "Check Variable"
    },
    {
      "storage": "0",
      "stringifyOutput": "0",
      "varName": "",
      "hostname": "",
      "port": "",
      "username": "",
      "password": "",
      "database": "",
      "query": "UPDATE `raw_data_posts` \nSET `active_post` = '0'\n    WHERE `post_id` = ${tempVars(\"postidtofind\")};",
      "path": "",
      "otype": "0",
      "source_conn_storage": "3",
      "source_conn_varName": "rd-database-connection",
      "store_source_conn_storage": "0",
      "store_source_conn_varName": "results",
      "debugMode": "0",
      "name": "Run SQL Query"
    },
    {
      "info": "0",
      "find": "${tempVars(\"postauthorid\")}",
      "storage": "1",
      "varName": "author",
      "name": "Find Member"
    },
    {
      "info": "1",
      "find": "${tempVars(\"postcategory\")}",
      "storage": "1",
      "varName": "channel",
      "name": "Find Channel"
    },
    {
      "channel": "3",
      "varName": "approval-channel",
      "info": "1",
      "storage": "1",
      "varName2": "approval-channel-id",
      "name": "Store Channel Info"
    },
    {
      "title": " ",
      "author": "${tempVars(\"postauthor\")}",
      "color": "#E74C3C",
      "timestamp": "true",
      "url": "",
      "authorIcon": "${tempVars(\"postauthorimg\")}",
      "imageUrl": "",
      "thumbUrl": "",
      "storage": "1",
      "varName": "embed",
      "name": "Create Embed Message"
    },
    {
      "storage": "1",
      "varName": "embed",
      "fieldName": "Category",
      "message": "${tempVars(\"channel\")}",
      "inline": "0",
      "name": "Add Embed Field"
    },
    {
      "storage": "1",
      "varName": "embed",
      "fieldName": "Author",
      "message": "${tempVars(\"author\")}",
      "inline": "0",
      "name": "Add Embed Field"
    },
    {
      "storage": "1",
      "varName": "embed",
      "fieldName": "Post Body",
      "message": "${tempVars(\"postbody\")}",
      "inline": "1",
      "name": "Add Embed Field"
    },
    {
      "storage": "1",
      "varName": "embed",
      "fieldName": "Denial Reasons",
      "message": "${tempVars(\"postdreasons\")}\n<@${tempVars(\"cmd-author-id\")}>: ${tempVars(\"denialreason\")}",
      "inline": "1",
      "name": "Add Embed Field"
    },
    {
      "storage": "1",
      "varName": "embed",
      "message": "Denied #${tempVars(\"postidtofind\")}",
      "footerIcon": "",
      "name": "Set Embed Footer"
    },
    {
      "storage": "1",
      "varName": "embed",
      "channel": "5",
      "varName2": "approval-channel",
      "storage3": "0",
      "varName3": "embed-sent-message",
      "name": "Send Embed Message"
    },
    {
      "info": "1",
      "find": "rd-contributor-chat",
      "storage": "1",
      "varName": "rd-contributor-chat",
      "name": "Find Channel"
    },
    {
      "channel": "3",
      "varName": "rd-contributor-chat",
      "info": "1",
      "storage": "1",
      "varName2": "rd-contributor-chat-id",
      "name": "Store Channel Info"
    },
    {
      "behavior": "0",
      "interpretation": "0",
      "code": "var auth = tempVars(\"author\");\nvar rdapp = tempVars(\"rd-contributor-chat-id\");\nvar embed = tempVars(\"embed\");\n\nauth.send({embed}).catch(() => client.channels.get(rdapp).send(auth + \" has their DMs disabled! Someone let them know why their Raw Data with the ID of **${tempVars(\"postidtofind\")}** was denied!\"))",
      "storage": "0",
      "varName": "",
      "name": "Run Script"
    },
    {
      "behavior": "0",
      "interpretation": "0",
      "code": "var origin = tempVars(\"originalmsgid\");\n\nfunction logMapElements(value, key, map) {\nif(value.pinned == true && value.id == origin){\n  value.unpin();\n  value.delete();\n}\n}\nclient.channels.get(tempVars(\"approval-channel-id\")).fetchPinnedMessages().then(messages => messages.forEach(logMapElements)) ",
      "storage": "0",
      "varName": "",
      "name": "Run Script"
    }
  ],
  "_aliases": [
    "decline"
  ]
}